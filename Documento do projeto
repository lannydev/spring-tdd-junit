Testes unitários

1. cenário - montagem do cenário de teste

2. Executar - Executa o teste em si

3. verificação do teste - se o teste ocorreu com sucesso
Assert - diretivas do JUnit



TDD (Test Driven Development)
- Desenvolvimento orientado por testes

O software é desenvolvido baseado em testes que são escritos antes do código fonte
 
FUNCIONAMENTO:
- Primeiro escreve o teste - a principio o teste não vai passar
- Implementa o código
- Fazer o teste passar 
- Refatorar


BDD (Behavior Driven Development) - Consiste em escrever testes que qualquer humano pode ler. BDD trás pra gente não só um estilo de escrever cenários de testes amigável, mas a importante idéia do que deve ser feito antes de escrever o código que implementa sua funcionalidade. 
- Modelar o comportamento do sistema através de testes e depois implementar as funcionalidades.

FUNCIONAMENTO?
- Given - Dado - Cenário
- When - Quando - Execução
- Then - Então - Resultado



MOCKITO
Biblioteca que auxilia os testes - fazer mok de objetos
(ao fazer instancia de objetos - faz-se instancia de mock


Outra forma de criar mocks é através na anotaciom @Mock - mas para rodar a anotacion vc deve usar antes da classe a extensão @RunWith(MockitoJUnitRunner.class)
